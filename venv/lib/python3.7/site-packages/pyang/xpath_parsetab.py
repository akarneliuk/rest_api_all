
# xpath_parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ExprleftORleftANDleftEQNEQleftLTLTEGTGTErightUMINUSAND AT BAR COMMA DIV DOLLAR DOT DOTDOT DOUBLECOLON DOUBLESLASH EQ GT GTE LBRACKET LPAREN LT LTE MINUS MOD NEQ OR PLUS RBRACKET RPAREN SLASH STAR axis function_name literal name node_type number prefix_test wildcardLocationPath : RelativeLocationPathLocationPath : AbsoluteLocationPathAbsoluteLocationPath : SLASH RelativeLocationPathAbsoluteLocationPath : SLASHAbsoluteLocationPath : AbbreviatedAbsoluteLocationPathRelativeLocationPath : StepRelativeLocationPath : RelativeLocationPath SLASH StepRelativeLocationPath : AbbreviatedRelativeLocationPathStep : axis DOUBLECOLON NodeTest PredicateListStep : axis DOUBLECOLON NodeTestStep : AT name PredicateListStep : AT nameStep : NodeTest PredicateListStep : NodeTestStep : AbbreviatedStep PredicateListStep : AbbreviatedStepPredicateList : PredicateList PredicatePredicateList : PredicateNodeTest : NameTestNodeTest : node_type LPAREN RPARENNodeTest : node_type LPAREN literal RPARENPredicate : LBRACKET PredicateExpr RBRACKETPredicateExpr : ExprAbbreviatedAbsoluteLocationPath : DOUBLESLASH RelativeLocationPathAbbreviatedRelativeLocationPath : RelativeLocationPath DOUBLESLASH StepAbbreviatedStep : DOTAbbreviatedStep : DOTDOTExpr : OrExprPrimaryExpr : DOLLAR namePrimaryExpr : LPAREN Expr RPARENPrimaryExpr : literalPrimaryExpr : numberPrimaryExpr : FunctionCallFunctionCall : function_name LPAREN RPARENFunctionCall : function_name LPAREN ArgumentList RPARENArgumentList : ArgumentList COMMA ArgumentArgumentList : ArgumentArgument : ExprUnionExpr : PathExprUnionExpr : UnionExpr BAR PathExprPathExpr : LocationPathPathExpr : FilterExprPathExpr : FilterExpr SLASH RelativeLocationPathPathExpr : FilterExpr DOUBLESLASH RelativeLocationPathFilterExpr : PrimaryExprFilterExpr : FilterExpr PredicateOrExpr : AndExprOrExpr : OrExpr OR AndExprAndExpr : EqualityExprAndExpr : AndExpr AND EqualityExprEqualityExpr : RelationalExprEqualityExpr : EqualityExpr EQ RelationalExprEqualityExpr : EqualityExpr NEQ RelationalExprRelationalExpr : AdditiveExprRelationalExpr : RelationalExpr LT AdditiveExprRelationalExpr : RelationalExpr GT AdditiveExprRelationalExpr : RelationalExpr LTE AdditiveExprRelationalExpr : RelationalExpr GTE AdditiveExprAdditiveExpr : MultiplicativeExprAdditiveExpr : AdditiveExpr PLUS MultiplicativeExprAdditiveExpr : AdditiveExpr MINUS MultiplicativeExprMultiplicativeExpr : UnaryExprMultiplicativeExpr : MultiplicativeExpr MultiplyOperator UnaryExprMultiplicativeExpr : MultiplicativeExpr DIV UnaryExprMultiplicativeExpr : MultiplicativeExpr MOD UnaryExprUnaryExpr : UnionExprUnaryExpr : MINUS UnaryExpr %prec UMINUSMultiplyOperator : STARNameTest : wildcardNameTest : prefix_testNameTest : name'
    
_lr_action_items = {'STAR':([1,2,3,6,7,8,10,11,12,13,14,15,17,21,23,25,29,31,32,33,34,35,36,38,39,41,53,59,60,62,66,69,71,74,75,76,78,79,80,81,82,83,84,85,87,95,96,99,100,102,103,104,105,],[-14,-66,-32,-5,-19,-41,-8,47,-39,-1,-27,-6,-26,-31,-62,-70,-2,-71,-42,-4,-33,-69,-45,-16,-18,-13,-67,-29,-24,-12,-46,-3,-15,-17,-40,-20,-10,47,47,-63,-64,-65,-25,-7,-34,-11,-30,-44,-43,-22,-21,-9,-35,]),'SLASH':([0,1,3,7,10,13,14,15,16,17,21,25,28,31,32,34,35,36,38,39,40,41,42,45,46,47,48,49,50,54,55,56,57,58,59,60,61,62,64,65,66,69,70,71,74,76,78,84,85,87,95,96,99,100,102,103,104,105,106,],[33,-14,-32,-19,-8,52,-27,-6,33,-26,-31,-70,33,-71,68,-33,-69,-45,-16,-18,33,-13,33,33,33,-68,33,33,33,33,33,33,33,33,-29,52,33,-12,33,33,-46,52,33,-15,-17,-20,-10,-25,-7,-34,-11,-30,52,52,-22,-21,-9,-35,33,]),'number':([0,16,28,40,42,45,46,47,48,49,50,54,55,56,57,58,61,64,65,70,106,],[3,3,3,3,3,3,3,-68,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'LBRACKET':([1,3,7,14,17,21,25,31,32,34,35,36,38,39,41,59,62,66,71,74,76,78,87,95,96,102,103,104,105,],[40,-32,-19,-27,-26,-31,-70,-71,40,-33,-69,-45,40,-18,40,-29,40,-46,40,-17,-20,40,-34,40,-30,-22,-21,40,-35,]),'node_type':([0,16,24,28,33,40,42,44,45,46,47,48,49,50,51,52,54,55,56,57,58,61,64,65,67,68,70,106,],[4,4,4,4,4,4,4,4,4,4,-68,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'BAR':([1,2,3,6,7,8,10,12,13,14,15,17,21,25,29,31,32,33,34,35,36,38,39,41,59,60,62,66,69,71,74,75,76,78,84,85,87,95,96,99,100,102,103,104,105,],[-14,42,-32,-5,-19,-41,-8,-39,-1,-27,-6,-26,-31,-70,-2,-71,-42,-4,-33,-69,-45,-16,-18,-13,-29,-24,-12,-46,-3,-15,-17,-40,-20,-10,-25,-7,-34,-11,-30,-44,-43,-22,-21,-9,-35,]),'DIV':([1,2,3,6,7,8,10,11,12,13,14,15,17,21,23,25,29,31,32,33,34,35,36,38,39,41,53,59,60,62,66,69,71,74,75,76,78,79,80,81,82,83,84,85,87,95,96,99,100,102,103,104,105,],[-14,-66,-32,-5,-19,-41,-8,49,-39,-1,-27,-6,-26,-31,-62,-70,-2,-71,-42,-4,-33,-69,-45,-16,-18,-13,-67,-29,-24,-12,-46,-3,-15,-17,-40,-20,-10,49,49,-63,-64,-65,-25,-7,-34,-11,-30,-44,-43,-22,-21,-9,-35,]),'MINUS':([0,1,2,3,6,7,8,9,10,11,12,13,14,15,16,17,21,23,25,28,29,31,32,33,34,35,36,38,39,40,41,45,46,47,48,49,50,53,54,55,56,57,58,59,60,61,62,64,65,66,69,70,71,74,75,76,78,79,80,81,82,83,84,85,87,90,91,92,93,95,96,99,100,102,103,104,105,106,],[16,-14,-66,-32,-5,-19,-41,46,-8,-59,-39,-1,-27,-6,16,-26,-31,-62,-70,16,-2,-71,-42,-4,-33,-69,-45,-16,-18,16,-13,16,16,-68,16,16,16,-67,16,16,16,16,16,-29,-24,16,-12,16,16,-46,-3,16,-15,-17,-40,-20,-10,-60,-61,-63,-64,-65,-25,-7,-34,46,46,46,46,-11,-30,-44,-43,-22,-21,-9,-35,16,]),'DOT':([0,16,24,28,33,40,42,45,46,47,48,49,50,51,52,54,55,56,57,58,61,64,65,67,68,70,106,],[17,17,17,17,17,17,17,17,17,-68,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'axis':([0,16,24,28,33,40,42,45,46,47,48,49,50,51,52,54,55,56,57,58,61,64,65,67,68,70,106,],[5,5,5,5,5,5,5,5,5,-68,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'RPAREN':([1,2,3,6,7,8,9,10,11,12,13,14,15,17,19,21,23,25,26,29,30,31,32,33,34,35,36,37,38,39,41,43,53,54,59,60,62,63,66,69,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,],[-14,-66,-32,-5,-19,-41,-54,-8,-59,-39,-1,-27,-6,-26,-51,-31,-62,-70,-28,-2,-49,-71,-42,-4,-33,-69,-45,-47,-16,-18,-13,76,-67,87,-29,-24,-12,96,-46,-3,-15,-17,-40,-20,103,-10,-60,-61,-63,-64,-65,-25,-7,105,-34,-38,-37,-56,-58,-55,-57,-48,-11,-30,-52,-53,-44,-43,-50,-22,-21,-9,-35,-36,]),'LT':([1,2,3,6,7,8,9,10,11,12,13,14,15,17,19,21,23,25,29,31,32,33,34,35,36,38,39,41,53,59,60,62,66,69,71,74,75,76,78,79,80,81,82,83,84,85,87,90,91,92,93,95,96,97,98,99,100,102,103,104,105,],[-14,-66,-32,-5,-19,-41,-54,-8,-59,-39,-1,-27,-6,-26,57,-31,-62,-70,-2,-71,-42,-4,-33,-69,-45,-16,-18,-13,-67,-29,-24,-12,-46,-3,-15,-17,-40,-20,-10,-60,-61,-63,-64,-65,-25,-7,-34,-56,-58,-55,-57,-11,-30,57,57,-44,-43,-22,-21,-9,-35,]),'DOTDOT':([0,16,24,28,33,40,42,45,46,47,48,49,50,51,52,54,55,56,57,58,61,64,65,67,68,70,106,],[14,14,14,14,14,14,14,14,14,-68,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'literal':([0,16,28,40,42,43,45,46,47,48,49,50,54,55,56,57,58,61,64,65,70,106,],[21,21,21,21,21,77,21,21,-68,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'PLUS':([1,2,3,6,7,8,9,10,11,12,13,14,15,17,21,23,25,29,31,32,33,34,35,36,38,39,41,53,59,60,62,66,69,71,74,75,76,78,79,80,81,82,83,84,85,87,90,91,92,93,95,96,99,100,102,103,104,105,],[-14,-66,-32,-5,-19,-41,45,-8,-59,-39,-1,-27,-6,-26,-31,-62,-70,-2,-71,-42,-4,-33,-69,-45,-16,-18,-13,-67,-29,-24,-12,-46,-3,-15,-17,-40,-20,-10,-60,-61,-63,-64,-65,-25,-7,-34,45,45,45,45,-11,-30,-44,-43,-22,-21,-9,-35,]),'DOUBLECOLON':([5,],[44,]),'COMMA':([1,2,3,6,7,8,9,10,11,12,13,14,15,17,19,21,23,25,26,29,30,31,32,33,34,35,36,37,38,39,41,53,59,60,62,66,69,71,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,],[-14,-66,-32,-5,-19,-41,-54,-8,-59,-39,-1,-27,-6,-26,-51,-31,-62,-70,-28,-2,-49,-71,-42,-4,-33,-69,-45,-47,-16,-18,-13,-67,-29,-24,-12,-46,-3,-15,-17,-40,-20,-10,-60,-61,-63,-64,-65,-25,-7,106,-34,-38,-37,-56,-58,-55,-57,-48,-11,-30,-52,-53,-44,-43,-50,-22,-21,-9,-35,-36,]),'NEQ':([1,2,3,6,7,8,9,10,11,12,13,14,15,17,19,21,23,25,29,30,31,32,33,34,35,36,38,39,41,53,59,60,62,66,69,71,74,75,76,78,79,80,81,82,83,84,85,87,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,],[-14,-66,-32,-5,-19,-41,-54,-8,-59,-39,-1,-27,-6,-26,-51,-31,-62,-70,-2,65,-71,-42,-4,-33,-69,-45,-16,-18,-13,-67,-29,-24,-12,-46,-3,-15,-17,-40,-20,-10,-60,-61,-63,-64,-65,-25,-7,-34,-56,-58,-55,-57,-11,-30,-52,-53,-44,-43,65,-22,-21,-9,-35,]),'$end':([1,2,3,6,7,8,9,10,11,12,13,14,15,17,19,20,21,23,25,26,29,30,31,32,33,34,35,36,37,38,39,41,53,59,60,62,66,69,71,74,75,76,78,79,80,81,82,83,84,85,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,],[-14,-66,-32,-5,-19,-41,-54,-8,-59,-39,-1,-27,-6,-26,-51,0,-31,-62,-70,-28,-2,-49,-71,-42,-4,-33,-69,-45,-47,-16,-18,-13,-67,-29,-24,-12,-46,-3,-15,-17,-40,-20,-10,-60,-61,-63,-64,-65,-25,-7,-34,-56,-58,-55,-57,-48,-11,-30,-52,-53,-44,-43,-50,-22,-21,-9,-35,]),'GT':([1,2,3,6,7,8,9,10,11,12,13,14,15,17,19,21,23,25,29,31,32,33,34,35,36,38,39,41,53,59,60,62,66,69,71,74,75,76,78,79,80,81,82,83,84,85,87,90,91,92,93,95,96,97,98,99,100,102,103,104,105,],[-14,-66,-32,-5,-19,-41,-54,-8,-59,-39,-1,-27,-6,-26,55,-31,-62,-70,-2,-71,-42,-4,-33,-69,-45,-16,-18,-13,-67,-29,-24,-12,-46,-3,-15,-17,-40,-20,-10,-60,-61,-63,-64,-65,-25,-7,-34,-56,-58,-55,-57,-11,-30,55,55,-44,-43,-22,-21,-9,-35,]),'GTE':([1,2,3,6,7,8,9,10,11,12,13,14,15,17,19,21,23,25,29,31,32,33,34,35,36,38,39,41,53,59,60,62,66,69,71,74,75,76,78,79,80,81,82,83,84,85,87,90,91,92,93,95,96,97,98,99,100,102,103,104,105,],[-14,-66,-32,-5,-19,-41,-54,-8,-59,-39,-1,-27,-6,-26,56,-31,-62,-70,-2,-71,-42,-4,-33,-69,-45,-16,-18,-13,-67,-29,-24,-12,-46,-3,-15,-17,-40,-20,-10,-60,-61,-63,-64,-65,-25,-7,-34,-56,-58,-55,-57,-11,-30,56,56,-44,-43,-22,-21,-9,-35,]),'DOLLAR':([0,16,28,40,42,45,46,47,48,49,50,54,55,56,57,58,61,64,65,70,106,],[22,22,22,22,22,22,22,-68,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'DOUBLESLASH':([0,1,3,7,10,13,14,15,16,17,21,25,28,31,32,34,35,36,38,39,40,41,42,45,46,47,48,49,50,54,55,56,57,58,59,60,61,62,64,65,66,69,70,71,74,76,78,84,85,87,95,96,99,100,102,103,104,105,106,],[24,-14,-32,-19,-8,51,-27,-6,24,-26,-31,-70,24,-71,67,-33,-69,-45,-16,-18,24,-13,24,24,24,-68,24,24,24,24,24,24,24,24,-29,51,24,-12,24,24,-46,51,24,-15,-17,-20,-10,-25,-7,-34,-11,-30,51,51,-22,-21,-9,-35,24,]),'prefix_test':([0,16,24,28,33,40,42,44,45,46,47,48,49,50,51,52,54,55,56,57,58,61,64,65,67,68,70,106,],[25,25,25,25,25,25,25,25,25,25,-68,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'AT':([0,16,24,28,33,40,42,45,46,47,48,49,50,51,52,54,55,56,57,58,61,64,65,67,68,70,106,],[27,27,27,27,27,27,27,27,27,-68,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'LTE':([1,2,3,6,7,8,9,10,11,12,13,14,15,17,19,21,23,25,29,31,32,33,34,35,36,38,39,41,53,59,60,62,66,69,71,74,75,76,78,79,80,81,82,83,84,85,87,90,91,92,93,95,96,97,98,99,100,102,103,104,105,],[-14,-66,-32,-5,-19,-41,-54,-8,-59,-39,-1,-27,-6,-26,58,-31,-62,-70,-2,-71,-42,-4,-33,-69,-45,-16,-18,-13,-67,-29,-24,-12,-46,-3,-15,-17,-40,-20,-10,-60,-61,-63,-64,-65,-25,-7,-34,-56,-58,-55,-57,-11,-30,58,58,-44,-43,-22,-21,-9,-35,]),'LPAREN':([0,4,16,18,28,40,42,45,46,47,48,49,50,54,55,56,57,58,61,64,65,70,106,],[28,43,28,54,28,28,28,28,28,-68,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'EQ':([1,2,3,6,7,8,9,10,11,12,13,14,15,17,19,21,23,25,29,30,31,32,33,34,35,36,38,39,41,53,59,60,62,66,69,71,74,75,76,78,79,80,81,82,83,84,85,87,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,],[-14,-66,-32,-5,-19,-41,-54,-8,-59,-39,-1,-27,-6,-26,-51,-31,-62,-70,-2,64,-71,-42,-4,-33,-69,-45,-16,-18,-13,-67,-29,-24,-12,-46,-3,-15,-17,-40,-20,-10,-60,-61,-63,-64,-65,-25,-7,-34,-56,-58,-55,-57,-11,-30,-52,-53,-44,-43,64,-22,-21,-9,-35,]),'AND':([1,2,3,6,7,8,9,10,11,12,13,14,15,17,19,21,23,25,29,30,31,32,33,34,35,36,37,38,39,41,53,59,60,62,66,69,71,74,75,76,78,79,80,81,82,83,84,85,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,],[-14,-66,-32,-5,-19,-41,-54,-8,-59,-39,-1,-27,-6,-26,-51,-31,-62,-70,-2,-49,-71,-42,-4,-33,-69,-45,70,-16,-18,-13,-67,-29,-24,-12,-46,-3,-15,-17,-40,-20,-10,-60,-61,-63,-64,-65,-25,-7,-34,-56,-58,-55,-57,70,-11,-30,-52,-53,-44,-43,-50,-22,-21,-9,-35,]),'name':([0,16,22,24,27,28,33,40,42,44,45,46,47,48,49,50,51,52,54,55,56,57,58,61,64,65,67,68,70,106,],[31,31,59,31,62,31,31,31,31,31,31,31,-68,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'wildcard':([0,16,24,28,33,40,42,44,45,46,47,48,49,50,51,52,54,55,56,57,58,61,64,65,67,68,70,106,],[35,35,35,35,35,35,35,35,35,35,-68,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'RBRACKET':([1,2,3,6,7,8,9,10,11,12,13,14,15,17,19,21,23,25,26,29,30,31,32,33,34,35,36,37,38,39,41,53,59,60,62,66,69,71,72,73,74,75,76,78,79,80,81,82,83,84,85,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,],[-14,-66,-32,-5,-19,-41,-54,-8,-59,-39,-1,-27,-6,-26,-51,-31,-62,-70,-28,-2,-49,-71,-42,-4,-33,-69,-45,-47,-16,-18,-13,-67,-29,-24,-12,-46,-3,-15,-23,102,-17,-40,-20,-10,-60,-61,-63,-64,-65,-25,-7,-34,-56,-58,-55,-57,-48,-11,-30,-52,-53,-44,-43,-50,-22,-21,-9,-35,]),'function_name':([0,16,28,40,42,45,46,47,48,49,50,54,55,56,57,58,61,64,65,70,106,],[18,18,18,18,18,18,18,-68,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'OR':([1,2,3,6,7,8,9,10,11,12,13,14,15,17,19,21,23,25,26,29,30,31,32,33,34,35,36,37,38,39,41,53,59,60,62,66,69,71,74,75,76,78,79,80,81,82,83,84,85,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,],[-14,-66,-32,-5,-19,-41,-54,-8,-59,-39,-1,-27,-6,-26,-51,-31,-62,-70,61,-2,-49,-71,-42,-4,-33,-69,-45,-47,-16,-18,-13,-67,-29,-24,-12,-46,-3,-15,-17,-40,-20,-10,-60,-61,-63,-64,-65,-25,-7,-34,-56,-58,-55,-57,-48,-11,-30,-52,-53,-44,-43,-50,-22,-21,-9,-35,]),'MOD':([1,2,3,6,7,8,10,11,12,13,14,15,17,21,23,25,29,31,32,33,34,35,36,38,39,41,53,59,60,62,66,69,71,74,75,76,78,79,80,81,82,83,84,85,87,95,96,99,100,102,103,104,105,],[-14,-66,-32,-5,-19,-41,-8,50,-39,-1,-27,-6,-26,-31,-62,-70,-2,-71,-42,-4,-33,-69,-45,-16,-18,-13,-67,-29,-24,-12,-46,-3,-15,-17,-40,-20,-10,50,50,-63,-64,-65,-25,-7,-34,-11,-30,-44,-43,-22,-21,-9,-35,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'NodeTest':([0,16,24,28,33,40,42,44,45,46,48,49,50,51,52,54,55,56,57,58,61,64,65,67,68,70,106,],[1,1,1,1,1,1,1,78,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'UnionExpr':([0,16,28,40,45,46,48,49,50,54,55,56,57,58,61,64,65,70,106,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'AbbreviatedAbsoluteLocationPath':([0,16,28,40,42,45,46,48,49,50,54,55,56,57,58,61,64,65,70,106,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'LocationPath':([0,16,28,40,42,45,46,48,49,50,54,55,56,57,58,61,64,65,70,106,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'AdditiveExpr':([0,28,40,54,55,56,57,58,61,64,65,70,106,],[9,9,9,9,90,91,92,93,9,9,9,9,9,]),'AbbreviatedRelativeLocationPath':([0,16,24,28,33,40,42,45,46,48,49,50,54,55,56,57,58,61,64,65,67,68,70,106,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'NameTest':([0,16,24,28,33,40,42,44,45,46,48,49,50,51,52,54,55,56,57,58,61,64,65,67,68,70,106,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'ArgumentList':([54,],[86,]),'Predicate':([1,32,38,41,62,71,78,95,104,],[39,66,39,74,39,74,39,74,74,]),'PredicateList':([1,38,62,78,],[41,71,95,104,]),'EqualityExpr':([0,28,40,54,61,70,106,],[30,30,30,30,30,101,30,]),'MultiplyOperator':([11,79,80,],[48,48,48,]),'Step':([0,16,24,28,33,40,42,45,46,48,49,50,51,52,54,55,56,57,58,61,64,65,67,68,70,106,],[15,15,15,15,15,15,15,15,15,15,15,15,84,85,15,15,15,15,15,15,15,15,15,15,15,15,]),'RelationalExpr':([0,28,40,54,61,64,65,70,106,],[19,19,19,19,19,97,98,19,19,]),'MultiplicativeExpr':([0,28,40,45,46,54,55,56,57,58,61,64,65,70,106,],[11,11,11,79,80,11,11,11,11,11,11,11,11,11,11,]),'Expr':([0,28,40,54,106,],[20,63,72,88,88,]),'UnaryExpr':([0,16,28,40,45,46,48,49,50,54,55,56,57,58,61,64,65,70,106,],[23,53,23,23,23,23,81,82,83,23,23,23,23,23,23,23,23,23,23,]),'PathExpr':([0,16,28,40,42,45,46,48,49,50,54,55,56,57,58,61,64,65,70,106,],[12,12,12,12,75,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'AndExpr':([0,28,40,54,61,106,],[37,37,37,37,94,37,]),'AbsoluteLocationPath':([0,16,28,40,42,45,46,48,49,50,54,55,56,57,58,61,64,65,70,106,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'RelativeLocationPath':([0,16,24,28,33,40,42,45,46,48,49,50,54,55,56,57,58,61,64,65,67,68,70,106,],[13,13,60,13,69,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,99,100,13,13,]),'FilterExpr':([0,16,28,40,42,45,46,48,49,50,54,55,56,57,58,61,64,65,70,106,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'Argument':([54,106,],[89,107,]),'FunctionCall':([0,16,28,40,42,45,46,48,49,50,54,55,56,57,58,61,64,65,70,106,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'PrimaryExpr':([0,16,28,40,42,45,46,48,49,50,54,55,56,57,58,61,64,65,70,106,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'OrExpr':([0,28,40,54,106,],[26,26,26,26,26,]),'PredicateExpr':([40,],[73,]),'AbbreviatedStep':([0,16,24,28,33,40,42,45,46,48,49,50,51,52,54,55,56,57,58,61,64,65,67,68,70,106,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Expr","S'",1,None,None,None),
  ('LocationPath -> RelativeLocationPath','LocationPath',1,'p_location_path_1','xpath_parser.py',29),
  ('LocationPath -> AbsoluteLocationPath','LocationPath',1,'p_location_path_2','xpath_parser.py',32),
  ('AbsoluteLocationPath -> SLASH RelativeLocationPath','AbsoluteLocationPath',2,'p_abs_location_path_1','xpath_parser.py',37),
  ('AbsoluteLocationPath -> SLASH','AbsoluteLocationPath',1,'p_abs_location_path_2','xpath_parser.py',40),
  ('AbsoluteLocationPath -> AbbreviatedAbsoluteLocationPath','AbsoluteLocationPath',1,'p_abs_location_path_3','xpath_parser.py',43),
  ('RelativeLocationPath -> Step','RelativeLocationPath',1,'p_rel_location_path_1','xpath_parser.py',48),
  ('RelativeLocationPath -> RelativeLocationPath SLASH Step','RelativeLocationPath',3,'p_rel_location_path_2','xpath_parser.py',51),
  ('RelativeLocationPath -> AbbreviatedRelativeLocationPath','RelativeLocationPath',1,'p_rel_location_path_3','xpath_parser.py',55),
  ('Step -> axis DOUBLECOLON NodeTest PredicateList','Step',4,'p_step_1','xpath_parser.py',60),
  ('Step -> axis DOUBLECOLON NodeTest','Step',3,'p_step_2','xpath_parser.py',63),
  ('Step -> AT name PredicateList','Step',3,'p_step_3','xpath_parser.py',66),
  ('Step -> AT name','Step',2,'p_step_4','xpath_parser.py',69),
  ('Step -> NodeTest PredicateList','Step',2,'p_step_5','xpath_parser.py',72),
  ('Step -> NodeTest','Step',1,'p_step_6','xpath_parser.py',75),
  ('Step -> AbbreviatedStep PredicateList','Step',2,'p_step_7','xpath_parser.py',78),
  ('Step -> AbbreviatedStep','Step',1,'p_step_8','xpath_parser.py',88),
  ('PredicateList -> PredicateList Predicate','PredicateList',2,'p_pred_list_1','xpath_parser.py',92),
  ('PredicateList -> Predicate','PredicateList',1,'p_pred_list_2','xpath_parser.py',96),
  ('NodeTest -> NameTest','NodeTest',1,'p_node_test_1','xpath_parser.py',101),
  ('NodeTest -> node_type LPAREN RPAREN','NodeTest',3,'p_node_test_2','xpath_parser.py',104),
  ('NodeTest -> node_type LPAREN literal RPAREN','NodeTest',4,'p_node_test_3','xpath_parser.py',107),
  ('Predicate -> LBRACKET PredicateExpr RBRACKET','Predicate',3,'p_pred','xpath_parser.py',114),
  ('PredicateExpr -> Expr','PredicateExpr',1,'p_pred_expr','xpath_parser.py',119),
  ('AbbreviatedAbsoluteLocationPath -> DOUBLESLASH RelativeLocationPath','AbbreviatedAbsoluteLocationPath',2,'p_abbrev_abs_loc_path','xpath_parser.py',124),
  ('AbbreviatedRelativeLocationPath -> RelativeLocationPath DOUBLESLASH Step','AbbreviatedRelativeLocationPath',3,'p_abbrev_rel_loc_path','xpath_parser.py',130),
  ('AbbreviatedStep -> DOT','AbbreviatedStep',1,'p_abbrev_step_1','xpath_parser.py',137),
  ('AbbreviatedStep -> DOTDOT','AbbreviatedStep',1,'p_abbrev_step_2','xpath_parser.py',140),
  ('Expr -> OrExpr','Expr',1,'p_expr','xpath_parser.py',145),
  ('PrimaryExpr -> DOLLAR name','PrimaryExpr',2,'p_prim_expr_1','xpath_parser.py',150),
  ('PrimaryExpr -> LPAREN Expr RPAREN','PrimaryExpr',3,'p_prim_expr_2','xpath_parser.py',153),
  ('PrimaryExpr -> literal','PrimaryExpr',1,'p_prim_expr_3','xpath_parser.py',156),
  ('PrimaryExpr -> number','PrimaryExpr',1,'p_prim_expr_4','xpath_parser.py',159),
  ('PrimaryExpr -> FunctionCall','PrimaryExpr',1,'p_prim_expr_5','xpath_parser.py',162),
  ('FunctionCall -> function_name LPAREN RPAREN','FunctionCall',3,'p_fun_call_1','xpath_parser.py',167),
  ('FunctionCall -> function_name LPAREN ArgumentList RPAREN','FunctionCall',4,'p_fun_call_2','xpath_parser.py',170),
  ('ArgumentList -> ArgumentList COMMA Argument','ArgumentList',3,'p_arg_list_1','xpath_parser.py',174),
  ('ArgumentList -> Argument','ArgumentList',1,'p_arg_list_2','xpath_parser.py',178),
  ('Argument -> Expr','Argument',1,'p_arg','xpath_parser.py',183),
  ('UnionExpr -> PathExpr','UnionExpr',1,'p_union_expr_1','xpath_parser.py',188),
  ('UnionExpr -> UnionExpr BAR PathExpr','UnionExpr',3,'p_union_expr_2','xpath_parser.py',191),
  ('PathExpr -> LocationPath','PathExpr',1,'p_path_expr_1','xpath_parser.py',196),
  ('PathExpr -> FilterExpr','PathExpr',1,'p_path_expr_2','xpath_parser.py',199),
  ('PathExpr -> FilterExpr SLASH RelativeLocationPath','PathExpr',3,'p_path_expr_3','xpath_parser.py',202),
  ('PathExpr -> FilterExpr DOUBLESLASH RelativeLocationPath','PathExpr',3,'p_path_expr_4','xpath_parser.py',206),
  ('FilterExpr -> PrimaryExpr','FilterExpr',1,'p_filter_expr_1','xpath_parser.py',213),
  ('FilterExpr -> FilterExpr Predicate','FilterExpr',2,'p_filter_expr_2','xpath_parser.py',216),
  ('OrExpr -> AndExpr','OrExpr',1,'p_or_expr_1','xpath_parser.py',221),
  ('OrExpr -> OrExpr OR AndExpr','OrExpr',3,'p_or_expr_2','xpath_parser.py',224),
  ('AndExpr -> EqualityExpr','AndExpr',1,'p_and_expr_1','xpath_parser.py',229),
  ('AndExpr -> AndExpr AND EqualityExpr','AndExpr',3,'p_and_expr_2','xpath_parser.py',232),
  ('EqualityExpr -> RelationalExpr','EqualityExpr',1,'p_eq_expr_1','xpath_parser.py',237),
  ('EqualityExpr -> EqualityExpr EQ RelationalExpr','EqualityExpr',3,'p_eq_expr_2','xpath_parser.py',240),
  ('EqualityExpr -> EqualityExpr NEQ RelationalExpr','EqualityExpr',3,'p_eq_expr_3','xpath_parser.py',243),
  ('RelationalExpr -> AdditiveExpr','RelationalExpr',1,'p_rel_expr_1','xpath_parser.py',248),
  ('RelationalExpr -> RelationalExpr LT AdditiveExpr','RelationalExpr',3,'p_rel_expr_2','xpath_parser.py',251),
  ('RelationalExpr -> RelationalExpr GT AdditiveExpr','RelationalExpr',3,'p_rel_expr_3','xpath_parser.py',254),
  ('RelationalExpr -> RelationalExpr LTE AdditiveExpr','RelationalExpr',3,'p_rel_expr_4','xpath_parser.py',257),
  ('RelationalExpr -> RelationalExpr GTE AdditiveExpr','RelationalExpr',3,'p_rel_expr_5','xpath_parser.py',260),
  ('AdditiveExpr -> MultiplicativeExpr','AdditiveExpr',1,'p_add_expr_1','xpath_parser.py',265),
  ('AdditiveExpr -> AdditiveExpr PLUS MultiplicativeExpr','AdditiveExpr',3,'p_add_expr_2','xpath_parser.py',268),
  ('AdditiveExpr -> AdditiveExpr MINUS MultiplicativeExpr','AdditiveExpr',3,'p_add_expr_3','xpath_parser.py',271),
  ('MultiplicativeExpr -> UnaryExpr','MultiplicativeExpr',1,'p_mul_expr_1','xpath_parser.py',276),
  ('MultiplicativeExpr -> MultiplicativeExpr MultiplyOperator UnaryExpr','MultiplicativeExpr',3,'p_mul_expr_2','xpath_parser.py',279),
  ('MultiplicativeExpr -> MultiplicativeExpr DIV UnaryExpr','MultiplicativeExpr',3,'p_mul_expr_3','xpath_parser.py',282),
  ('MultiplicativeExpr -> MultiplicativeExpr MOD UnaryExpr','MultiplicativeExpr',3,'p_mul_expr_4','xpath_parser.py',285),
  ('UnaryExpr -> UnionExpr','UnaryExpr',1,'p_unary_expr_1','xpath_parser.py',290),
  ('UnaryExpr -> MINUS UnaryExpr','UnaryExpr',2,'p_unary_expr_2','xpath_parser.py',293),
  ('MultiplyOperator -> STAR','MultiplyOperator',1,'p_mul_oper','xpath_parser.py',298),
  ('NameTest -> wildcard','NameTest',1,'p_name_test_1','xpath_parser.py',303),
  ('NameTest -> prefix_test','NameTest',1,'p_name_test_2','xpath_parser.py',306),
  ('NameTest -> name','NameTest',1,'p_name_test_3','xpath_parser.py',309),
]
